-- Variables
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local camera = game.Workspace.CurrentCamera
local espEnabled = false -- ESP starts off
local highlightObjects = {}

-- Function to create a rainbow effect
local function getRainbowColor(t)
    local r = math.sin(t) * 0.5 + 0.5
    local g = math.sin(t + 2 * math.pi / 3) * 0.5 + 0.5
    local b = math.sin(t + 4 * math.pi / 3) * 0.5 + 0.5
    return Color3.new(r, g, b)
end

-- Function to create or update the highlight object (ESP)
local function highlightPlayer(targetPlayer)
    if not highlightObjects[targetPlayer.Name] then
        local highlight = Instance.new("Highlight")
        highlight.Adornee = targetPlayer.Character
        highlight.FillTransparency = 0.5 -- Semi-transparent glow
        highlight.OutlineTransparency = 0 -- Visible outline
        highlightObjects[targetPlayer.Name] = highlight
        highlight.Parent = targetPlayer.Character
    end
end

-- Function to update ESP colors (rainbow glow effect)
local function updateESPColors()
    local t = tick()
    for _, highlight in pairs(highlightObjects) do
        if highlight and highlight.Parent then
            highlight.FillColor = getRainbowColor(t)
            highlight.OutlineColor = getRainbowColor(t + 0.5)
        end
    end
end

-- Function to find the closest player's head while avoiding tracking through walls
local function getClosestVisiblePlayerHead()
    local players = game.Players:GetPlayers()
    local closestDistance = math.huge
    local closestHead = nil

    for _, targetPlayer in pairs(players) do
        if targetPlayer ~= player and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
            local headPosition = targetPlayer.Character.Head.Position
            local screenPosition, onScreen = camera:WorldToScreenPoint(headPosition)

            -- Raycast to check if there's a direct line of sight (no walls in the way)
            local origin = camera.CFrame.Position
            local direction = (headPosition - origin).unit * (headPosition - origin).magnitude
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
            raycastParams.FilterDescendantsInstances = {player.Character} -- Ignore local player's character

            local result = game.Workspace:Raycast(origin, direction, raycastParams)
            if result and result.Instance:IsDescendantOf(targetPlayer.Character) then
                -- If there's a direct line of sight, check the distance
                local distance = (headPosition - camera.CFrame.Position).magnitude
                if distance < closestDistance and onScreen then
                    closestDistance = distance
                    closestHead = targetPlayer.Character.Head
                end
            end
        end
    end

    return closestHead
end

-- Function to aim at the target player's head
local function aimAtTarget(targetHead)
    if targetHead then
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetHead.Position)
    end
end

-- Toggle ESP on/off with "E"
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent then
        if input.KeyCode == Enum.KeyCode.E then
            espEnabled = not espEnabled
            if espEnabled then
                -- Highlight all players for ESP
                local players = game.Players:GetPlayers()
                for _, targetPlayer in pairs(players) do
                    if targetPlayer ~= player and targetPlayer.Character then
                        highlightPlayer(targetPlayer)
                    end
                end
            else
                -- Clear highlights
                for _, highlight in pairs(highlightObjects) do
                    if highlight then
                        highlight:Destroy()
                    end
                end
                highlightObjects = {}
            end
        end
    end
end)

-- Detect holding right-click for aimbot
local aimbotEnabled = false
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aimbotEnabled = true -- Enable aimbot (tracking)
    end
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aimbotEnabled = false -- Disable aimbot (tracking stops)
    end
end)

-- Update ESP and aimbot every frame
game:GetService("RunService").RenderStepped:Connect(function()
    -- Update ESP colors
    if espEnabled then
        updateESPColors()
    end

    -- Find the closest visible head
    if aimbotEnabled then
        local targetHead = getClosestVisiblePlayerHead()
        aimAtTarget(targetHead) -- Track the closest player's head if visible
    end
end)
